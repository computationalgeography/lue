add_library(lue_framework_algorithm_test
    flow_accumulation.cpp
)
target_link_libraries(lue_framework_algorithm_test
    PUBLIC
        lue::framework_algorithm
        lue::framework_test
)

set(names
    accu_test.cpp
    accu_fraction_test.cpp
    accu_threshold_test.cpp
    add_test.cpp
    all_test.cpp
    any_test.cpp
    array_like_test.cpp
    array_partition_id_test.cpp
    array_partition_io_test.cpp
    atan_test.cpp
    atan2_test.cpp
    cast_test.cpp
    close_to_test.cpp
    convolve_test.cpp
    copy_test.cpp
    cos_test.cpp
    create_partitioned_array_test.cpp
    d8_network_test.cpp
    divide_test.cpp
    downstream_test.cpp
    downstream_distance_test.cpp
    equal_to_test.cpp
    fill_test.cpp
    focal_max_test.cpp
    focal_mean_test.cpp
    focal_operation_test.cpp
    focal_sum_test.cpp
    greater_than_equal_to_test.cpp
    greater_than_test.cpp
    inflow_count_test.cpp
    inter_partition_stream_test.cpp
    iterate_per_element_test.cpp
    less_than_equal_to_test.cpp
    less_than_test.cpp
    locality_id_test.cpp
    log_test.cpp
    logical_and_test.cpp
    logical_inclusive_or_test.cpp
    logical_not_test.cpp
    mesh_grid_test.cpp
    maximum_test.cpp
    minimum_test.cpp
    multiply_test.cpp
    none_test.cpp
    not_equal_to_test.cpp
    partition_count_unique_test.cpp
    pow_test.cpp
    range_test.cpp
    sin_test.cpp
    slope_test.cpp
    sqrt_test.cpp
    subtract_test.cpp
    sum_test.cpp
    uniform_test.cpp
    unique_id_test.cpp
    unique_test.cpp
    upstream_test.cpp
    valid_test.cpp
    where_test.cpp
    zonal_sum_test.cpp
)

add_unit_tests(
    SCOPE lue_framework_algorithm
    NAMES
        kernel_test.cpp
    LINK_LIBRARIES
        lue_framework_algorithm_test
        lue::framework_algorithm
        lue::framework_test
)

add_hpx_unit_tests(
    SCOPE lue_framework_algorithm
    NAMES ${names}
    LINK_LIBRARIES
        lue_framework_algorithm_test
        lue::framework_algorithm
        lue::framework_test
)

target_link_libraries(lue_framework_algorithm_accu_threshold_test
    PRIVATE
        lue::framework_flow_direction_operation)
