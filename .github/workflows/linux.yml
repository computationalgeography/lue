name: Linux CI

on: [push]

jobs:
    build:

        strategy:
            matrix:
                os: ["ubuntu-20.04"]
                python-version: [3.9]
                compiler:
                    - {version:  9, cc: gcc-9   , cxx: g++-9}
                    - {version: 10, cc: gcc-10  , cxx: g++-10}
                    - {version: 11, cc: clang-11, cxx: clang++-11}
                    - {version: 12, cc: clang-12, cxx: clang++-12}
            fail-fast: false

        runs-on: ${{ matrix.os }}

        name: ${{ matrix.os }} / ${{ matrix.compiler.cxx }} / python - ${{ matrix.python-version }}

        steps:

        - name: checkout lue
          uses: actions/checkout@v2

        - name: configure system
          run: |
              sudo apt update
              # sudo apt autoremove
              # sudo apt upgrade
              # https://packages.ubuntu.com/
              sudo apt install \
                  cmake \
                  doxygen \
                  graphviz \
                  hwloc \
                  lftp \
                  libboost-all-dev \
                  libdocopt-dev \
                  libfmt-dev \
                  libgdal-dev \
                  libglew-dev \
                  libglfw3-dev \
                  libgoogle-perftools-dev \
                  libhdf5-dev \
                  libnetcdf-dev \
                  ${{ matrix.compiler.cc }} \
                  ninja-build \
                  tree
        - uses: conda-incubator/setup-miniconda@v2
          with:
              auto-update-conda: true
              python-version: ${{ matrix.python-version }}
              channels: conda-forge
        - shell: bash -l {0}
          run: |
              # Pin markupsafe, used by Jinja which is used by Conan, because of a breaking
              # change in markupsafe 2.1.0
              conda install conan docopt "markupsafe<2.1.0" numpy
              # breathe sphinx
              conan profile new --detect default
              conan profile update settings.compiler.libcxx=libstdc++11 default
              # conan remote list
              # conan remote update conancenter https://center.conan.io

        - name: configure lue
          shell: bash -l {0}
          run: |
              mkdir build
              cmake \
                  -S . \
                  -B build \
                  -G"Ninja" \
                  -DCMAKE_C_COMPILER=${{ matrix.compiler.cc }} \
                  -DCMAKE_CXX_COMPILER=${{ matrix.compiler.cxx }} \
                  -DCMAKE_BUILD_TYPE=Release \
                  -DLUE_BUILD_DOCUMENTATION=FALSE \
                  -DLUE_BUILD_TEST=TRUE \
                  -DLUE_TEST_NR_LOCALITIES_PER_TEST=1 \
                  -DLUE_TEST_NR_THREADS_PER_LOCALITY=2 \
                  -DLUE_BUILD_DATA_MODEL=TRUE \
                  -DLUE_DATA_MODEL_WITH_PYTHON_API=TRUE \
                  -DLUE_DATA_MODEL_WITH_UTILITIES=TRUE \
                  -DLUE_BUILD_FRAMEWORK=TRUE \
                  -DLUE_FRAMEWORK_WITH_PYTHON_API=TRUE \
                  -DLUE_BUILD_HPX=TRUE \
                  -DLUE_BUILD_VIEW=TRUE \
                  -DHPX_USE_CMAKE_CXX_STANDARD=TRUE \
                  -DHPX_WITH_MALLOC="tcmalloc" \
                  -DHPX_WITH_FETCH_ASIO=TRUE \
                  -DHPX_WITH_PKGCONFIG=FALSE \
                  -DHPX_WITH_EXAMPLES=FALSE \
                  -DHPX_WITH_TESTS=FALSE

        - name: build lue
          shell: bash
          run: |
              cmake --build build --target all

        - name: test lue
          shell: bash
          run: |
              cd build
              ctest --output-on-failure

        # - name: generate lue documentation
        #   # Skip for now. Works locally, but here we get:
        #   # Extension error: Config value 'graphviz_dot' already present
        #   shell: bash
        #   run: |
        #       cmake --build build --target cpp_doc py_doc
        #       cmake --build build --target sphinx_doc

        # - name: install lue
        #   # Skip for now. Requires the docs, which are not built.
        #   shell: bash
        #   run: |
        #       cmake --install build --prefix install
        #       tree install

        - name: deploy lue documentation
          # Skip deploy for now. Still hangs upon uploading to the server...
          if: 0 && github.ref == 'refs/heads/master' && matrix.compiler.cxx == 'g++-9' && matrix.python-version == 3.9
          env:
              ftp_server: ${{ secrets.FTP_SERVER }}
              ftp_port: ${{ secrets.FTP_PORT }}
              ftp_username: ${{ secrets.FTP_USERNAME }}
              ftp_password: ${{ secrets.FTP_PASSWORD }}
              remote_dir: ${{ secrets.FTP_REMOTE_DIR }}
              local_dir: "sphinx/"
          run: |
              cd build/document/doc
              mkdir -p $HOME/.ssh
              ssh-keyscan $ftp_server >> $HOME/.ssh/known_hosts || true
              lftp -c "open --user $ftp_username --password $ftp_password -p $ftp_port sftp://$ftp_server; set sftp:auto-confirm yes; mirror --verbose --reverse --delete --continue --parallel=2 $local_dir $remote_dir/doc"
