name: Windows CI

on:
  push:
    branches-ignore:
      - ghxyz
    paths:
      - ".github/workflows/windows.yml"
      - "environment/cmake/**"
      - "source/**"
      - "!source/qa/python/qa/**"

jobs:
    build:

        strategy:
            matrix:
                os: ["windows-2022"]
                python-version: ["3.9"]
            fail-fast: false

        runs-on: ${{ matrix.os }}

        name: ${{ matrix.os }} / python - ${{ matrix.python-version }}

        steps:

        - name: checkout lue
          uses: actions/checkout@v3

        - uses: conda-incubator/setup-miniconda@v2
          with:
              auto-update-conda: true
              python-version: ${{ matrix.python-version }}
              channels: conda-forge

        - shell: bash -l {0}
          run: |
              conda install conda-build boost-cpp gdal hdf5 jinja2 libhwloc numpy pip

              # Needed by lue_scalability test below
              conda install docopt matplotlib

              # Use conan from pypi to get the latest version
              pip install "conan<2"

        - name: configure lue
          shell: bash -l {0}
          run: |
              mkdir $GITHUB_WORKSPACE/../build
              # -D FETCHCONTENT_QUIET=FALSE
              cmake \
                  -S . \
                  -B $GITHUB_WORKSPACE/../build \
                  -G "Visual Studio 17 2022" -A x64 \
                  -D CMAKE_BUILD_TYPE=Release \
                  -D LUE_DATA_MODEL_WITH_PYTHON_API:BOOL=TRUE \
                  -D LUE_DATA_MODEL_WITH_UTILITIES:BOOL=TRUE \
                  -D LUE_FRAMEWORK_WITH_PYTHON_API:BOOL=TRUE \
                  -D LUE_BUILD_VIEW:BOOL=TRUE \
                  -D LUE_BUILD_QA:BOOL=TRUE \
                  -D LUE_QA_WITH_PYTHON_API=TRUE \
                  -D LUE_QA_WITH_TESTS=TRUE \
                  -D LUE_QA_TEST_NR_LOCALITIES_PER_TEST=1 \
                  -D LUE_QA_TEST_NR_THREADS_PER_LOCALITY=2 \
                  -D LUE_HAVE_BOOST:BOOL=TRUE \
                  -D LUE_HAVE_DOCOPT:BOOL=FALSE \
                  -D LUE_HAVE_FMT:BOOL=FALSE \
                  -D LUE_HAVE_GDAL:BOOL=TRUE \
                  -D LUE_HAVE_GLFW:BOOL=FALSE \
                  -D LUE_HAVE_HDF5:BOOL=TRUE \
                  -D LUE_HAVE_NLOHMANN_JSON:BOOL=FALSE \
                  -D LUE_HAVE_PYBIND11:BOOL=FALSE \
                  -D LUE_BUILD_HPX:BOOL=TRUE \
                  -D HPX_USE_CMAKE_CXX_STANDARD=TRUE \
                  -D HPX_WITH_MALLOC="system" \
                  -D HPX_WITH_FETCH_ASIO=TRUE \
                  -D HPX_WITH_PKGCONFIG=FALSE \
                  -D HWLOC_ROOT="$CONDA_PREFIX/Library" \
                  -D HWLOC_LIBRARY="$CONDA_PREFIX/Library/lib/hwloc.lib" \
                  -D HPX_WITH_EXAMPLES=FALSE \
                  -D HPX_WITH_TESTS=FALSE

        - name: build lue
          shell: bash -l {0}
          run: |
              cmake --build $GITHUB_WORKSPACE/../build --config Release --target all_build

        - name: test lue
          shell: bash -l {0}
          run: |
              cd $GITHUB_WORKSPACE/../build
              ctest --extra-verbose --output-on-failure --build-config Release

        - name: install lue lue_runtime component
          shell: bash -l {0}
          run: |
              cmake --install $GITHUB_WORKSPACE/../build --prefix install --component core
              cmake --install $GITHUB_WORKSPACE/../build --prefix install --component parallelism
              cmake --install $GITHUB_WORKSPACE/../build --prefix install --component runtime
              cmake --install $GITHUB_WORKSPACE/../build --prefix install --component lue_runtime

              export PATH="`pwd`/install/bin:$PATH"
              install/bin/lue_translate --version
              install/bin/lue_validate --version
              install/bin/lue_view --version

              # Add our package to the set of Conda packages
              conda-develop install/lib/python${{ matrix.python-version }}
              install/bin/lue_scalability --version
              python -c "import lue, lue.data_model, lue.framework, lue.pcraster, lue.qa.scalability; print(lue.__version__)"
