name: macOS CI

on: [push]

jobs:
    build:

        strategy:
            matrix:
                os: ["macos-latest"]
                python-version: [2.7, 3.8, 3.9]

        runs-on: ${{ matrix.os }}

        name: ${{ matrix.os }} - ${{ matrix.python-version }}

        steps:

        - name: checkout lue
          uses: actions/checkout@v2

        - name: configure system
          run: |
              # brew update
              # brew upgrade
              brew install cmake boost doxygen gdal glew graphviz gperftools hdf5 hwloc ninja tree

        - uses: conda-incubator/setup-miniconda@v2
          with:
              auto-update-conda: true
              python-version: ${{ matrix.python-version }}
              channels: conda-forge
        - shell: bash -l {0}
          run: |
              conda install breathe conan docopt numpy psutil sphinx

        - name: configure lue
          shell: bash -l {0}
          run: |
              mkdir build
              cmake \
                  -S . \
                  -B build \
                  -G"Ninja" \
                  -DCMAKE_BUILD_TYPE=Release \
                  -DLUE_BUILD_DOCUMENTATION=TRUE \
                  -DLUE_BUILD_TEST=TRUE \
                  -DLUE_TEST_NR_LOCALITIES_PER_TEST=1 \
                  -DLUE_TEST_NR_THREADS_PER_LOCALITY=2 \
                  -DLUE_BUILD_DATA_MODEL=TRUE \
                  -DLUE_DATA_MODEL_WITH_PYTHON_API=TRUE \
                  -DLUE_DATA_MODEL_WITH_UTILITIES=TRUE \
                  -DLUE_BUILD_FRAMEWORK=FALSE \
                  -DLUE_FRAMEWORK_WITH_PYTHON_API=TRUE \
                  -DLUE_BUILD_HPX=TRUE \
                  -DLUE_BUILD_VIEW=TRUE \
                  -DHPX_USE_CMAKE_CXX_STANDARD=TRUE \
                  -DHPX_WITH_MALLOC="tcmalloc" \
                  -DHPX_WITH_FETCH_ASIO=TRUE \
                  -DHPX_WITH_EXAMPLES=FALSE \
                  -DHPX_WITH_TESTS=FALSE

        - name: build lue
          shell: bash
          run: |
              cmake --build build --target all

        - name: test lue
          shell: bash
          run: |
              cd build
              ctest --output-on-failure

        - name: generate lue documentation
          if: matrix.python-version > 3
          shell: bash
          run: |
              cmake --build build --target cpp_doc py_doc
              cmake --build build --target sphinx_doc

        - name: install lue
          if: matrix.python-version > 3
          shell: bash
          run: |
              cmake --install build --prefix install
              tree install
